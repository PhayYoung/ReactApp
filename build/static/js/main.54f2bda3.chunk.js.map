{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","state","text","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","id","shortid","generate","complete","this","onChange","placeholder","onClick","React","Component","style","display","justifyContent","textDecoration","todo","toggleComplete","onDelete","todos","todoToShow","toggleAllComplete","addTodo","map","updateTodoToShow","s","handleDeleteTodo","filter","removeAllTodosThatAreComplete","Todo","length","some","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54f2bda3.chunk.js","sourcesContent":["import React from 'react';\r\nimport shortid from 'shortid';\r\n\r\nexport default class TodoList extends React.Component  {\r\n  state={\r\n    text: ''\r\n  };\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    this.props.onSubmit({\r\n      id: shortid.generate(),\r\n      text: this.state.text,\r\n      complete: false\r\n    });\r\n    this.setState({\r\n      text: ''\r\n    });\r\n  };\r\n\r\n  render() {  \r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input \r\n          name='text'\r\n          value={this.state.text}\r\n          onChange={this.handleChange}\r\n          placeholder='todo...'\r\n        />\r\n        <button onClick={this.handleSubmit}>add to-do</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'; \r\n\r\nexport default props => (\r\n  <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n    <div\r\n      style={{\r\n        textDecoration: props.todo.complete ? 'line-through' : null\r\n      }}\r\n      onClick={props.toggleComplete}\r\n    >\r\n      {props.todo.text}\r\n    </div>\r\n    <button onClick={props.onDelete}>x</button>\r\n  </div>\r\n);\r\n\r\n \r\n\r\n","import React from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nexport default class TodoList extends React.Component  {\r\n  state = {\r\n    todos: [],\r\n    todoToShow: 'all',\r\n    toggleAllComplete: true\r\n  };\r\n\r\n  addTodo = todo => {\r\n    this.setState(state => ({\r\n      todos: [todo, ...this.state.todos]\r\n    }));\r\n  };\r\n\r\n  toggleComplete = id => {\r\n    this.setState(state => ({\r\n      todos: state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            complete: !todo.complete\r\n          };     \r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    }));\r\n  };\r\n\r\n  updateTodoToShow = s => {\r\n    this.setState({\r\n      todoToShow: s\r\n    });\r\n  };\r\n\r\n  handleDeleteTodo = id => {\r\n    this.setState(state => ({\r\n      todos: state.todos.filter(todo => todo.id !== id)\r\n    }));\r\n  };\r\n\r\n  removeAllTodosThatAreComplete = () => {\r\n    this.setState(state => ({\r\n      todos: state.todos.filter(todo => !todo.complete)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let todos = []\r\n\r\n    if (this.state.todoToShow === 'all') {\r\n      todos = this.state.todos;\r\n    } else if (this.state.todoToShow === 'active') {\r\n      todos = this.state.todos.filter(todo => !todo.complete);\r\n    } else if (this.state.todoToShow === 'complete') {\r\n      todos = this.state.todos.filter(todo => todo.complete);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <TodoForm onSubmit={this.addTodo}/>\r\n        {todos.map(todo => (\r\n          <Todo \r\n            key={todo.id} \r\n            toggleComplete={() => this.toggleComplete(todo.id)}\r\n            onDelete={() => this.handleDeleteTodo(todo.id)}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n        <div>\r\n          todos left: {this.state.todos.filter(todo => !todo.complete).length}\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.updateTodoToShow('all')}>all</button>\r\n          <button onClick={() => this.updateTodoToShow('active')}>\r\n            active\r\n          </button>\r\n          <button onClick={() => this.updateTodoToShow('complete')}>\r\n            complete\r\n          </button>\r\n        </div>\r\n        {this.state.todos.some(todo => todo.complete) ? (\r\n          <div>\r\n            <button onClick={this.removeAllTodosThatAreComplete}>\r\n              remove all complete todos\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        <div>\r\n          <button\r\n            onClick={() =>\r\n              this.setState(state => ({\r\n                todos: state.todos.map(todo => ({\r\n                  ...todo,\r\n                  complete: state.toggleAllComplete\r\n                })),\r\n                toggleAllComplete: !state.toggleAllComplete\r\n              }))\r\n            }\r\n          >\r\n            toggle all complete: {`${this.state.toggleAllComplete}`}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList'\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <TodoList />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}